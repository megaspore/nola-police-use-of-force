# Create a heatmap of the correlation matrix
correlation_matrix_melted <- melt(correlation_matrix)
ggplot(data = correlation_matrix_melted, aes(x = Var1, y = Var2, fill = value)) +
geom_tile() +
scale_fill_gradient2(low = "blue", high = "red", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 10, hjust = 1)) +
coord_fixed()
# There is a moderate negative correlation between the officer race which
# means that when the number of officers of one race increase the number of
# other officers of different race will go down.
modelsubinjured <- lm(weighted_sum ~ Subject_Injured,
data = trainData)
modelcopinjured <- lm(weighted_sum ~ Officer_Injured,
data = trainData)
modelsubhospital <- lm(weighted_sum ~ Subject_Hospitalized,
data = trainData)
modelsubrace <- lm(weighted_sum ~ Subject_Race_White +
Subject_Race_BlackandHispanic +
Subject_Race_BlackandIndian +
Subject_Race_Black +
Subject_Race_WhiteandBlack +
Subject_Race_BlackandRace_Unknown +
Subject_Race_Race_Unknown +
Subject_Race_Mixed +
Subject_Race_WhiteandHispanic +
Subject_Race_Hispanic +
Subject_Race_Majority_Black +
Subject_Race_Majority_Hispanic +
Subject_Race_Asian +
Subject_Race_BlackandIndiane +
Subject_Race_Majority_White +
Subject_Race_Indian,
data = trainData)
modeldivision <- lm(weighted_sum ~ Division_Task_Force +
Division_Night_Watch +
Division_C_Platoon +
Division_General_Assignments  +
Division_A_Platoon +
Division_Second_Watch +
Division_Narcotics +
Division_3rd_District +
Division_Traffic +
Division_4th_District +
Division_2nd_District +
Division_K9_Section +
Division_Staff +
Division_Bourbon_Promenade +
Division_District_Investigations_Unit +
Division_7th_District +
Division_8th_District +
Division_Other_Support +
Division_3rd_Platoon +
Division_6th_District +
Division_Homicide +
Division_B_Platoon +
Division_Day_Watch +
Division_Tactical_Section +
Division_Investigations +
Division_1st_Platoon +
Division_Street_Gang_Unit +
Division_2nd_Platoon +
Division_Force_Investigation_Team +
Division_1st_District +
Division_5th_District,
data = trainData)
modelweather <- lm(weighted_sum ~ Weather_Clear +
Weather_Other +
Weather_Rainy_Heavy +
Weather_Rainy_Light +
Weather_Rainy_Medium +
Weather_Foggy,
data = trainData)
modelsubgender <- lm(weighted_sum ~ Subject_Gender_Male +
Subject_Gender_Female +
Subject_Gender_MaleandFemale +
Subject_Gender_Majority_Male,
data = trainData)
modelsubsize <- lm(weighted_sum ~ Subject_Build_Small +
Subject_Build_Medium +
Subject_Build_Large +
Subject_Build_XLarge,
data = trainData)
modelcopgender <- lm(weighted_sum ~ Officer_Gender_Male +
Officer_Gender_MaleandFemale +
Officer_Gender_Majority_Male +
Officer_Gender_Female +
Officer_Gender_Majority_Female,
data = trainData)
modelinfluence <- lm(weighted_sum ~ Subject_Influence_None_Detected +
Subject_Influence_Mentally_Unstable +
Subject_Influence_Unknown +
Subject_Influence_Alchohol,
data = trainData)
modelforcetype <- lm(weighted_sum ~ Forcetype_Firearm_Exhibited +
Forcetype_Hands +
Forcetype_Force_Escort_Tech +
Forcetype_Head_Strike_No_Wep +
Forcetype_Hands_with_injury +
Forcetype_Force_Take_Down +
Forcetype_CEW_Exhibited_Laser +
Forcetype_Canine_Contact +
Forcetype_Baton_PR_24_NonStrk +
Forcetype_VehPursuits_wInjury +
Forcetype_Takedown_winjury +
Forcetype_Canine_NoBite +
Forcetype_Other +
Forcetype_Handcuffed_Subject +
Forcetype_Baton_PR_24_Strike +
Forcetype_CEW_Deployment +
Forcetype_Force_Defense_Tech +
Forcetype_Firearm_Discharged +
Forcetype_Baton_PR_24_Miss +
Forcetype_Force_Neck_Holds,
data = trainData)
modeledistance <- lm(weighted_sum ~ Distance_Between,
data = trainData)
modelesubage <- lm(weighted_sum ~ Subject_Age,
data = trainData)
modelsubheight <- lm(weighted_sum ~ Subject_Height,
data = trainData)
modelfocelevel <- lm(weighted_sum ~ Use_of_Force_Level,
data = trainData)
modelcopyearsservice <- lm(weighted_sum ~ Officer_Years_of_Service,
data = trainData)
modelcopage <- lm(weighted_sum ~ Officer_Age,
data = trainData)
modellightcondition <- lm(weighted_sum ~ Light_Condition,
data = trainData)
modelcombo <- lm(weighted_sum ~ Officer_Gender_Male +
Officer_Gender_MaleandFemale +
Officer_Gender_Majority_Male +
Officer_Gender_Female +
Officer_Gender_Majority_Female + Subject_Race_White +
Subject_Race_BlackandHispanic +
Subject_Race_BlackandIndian +
Subject_Race_Black +
Subject_Race_WhiteandBlack +
Subject_Race_BlackandRace_Unknown +
Subject_Race_Race_Unknown +
Subject_Race_Mixed +
Subject_Race_WhiteandHispanic +
Subject_Race_Hispanic +
Subject_Race_Majority_Black +
Subject_Race_Majority_Hispanic +
Subject_Race_Asian +
Subject_Race_BlackandIndiane +
Subject_Race_Majority_White +
Subject_Race_Indian +
Officer_Years_of_Service +
Subject_Gender_Male +
Subject_Gender_Female +
Subject_Gender_MaleandFemale +
Subject_Gender_Majority_Male +
Subject_Age +
Subject_Influence_None_Detected +
Subject_Influence_Mentally_Unstable +
Subject_Influence_Unknown +
Subject_Influence_Alchohol +
Forcetype_Firearm_Exhibited +
Forcetype_Hands +
Forcetype_Force_Escort_Tech +
Forcetype_Head_Strike_No_Wep +
Forcetype_Hands_with_injury +
Forcetype_Force_Take_Down +
Forcetype_CEW_Exhibited_Laser +
Forcetype_Canine_Contact +
Forcetype_Baton_PR_24_NonStrk +
Forcetype_VehPursuits_wInjury +
Forcetype_Takedown_winjury +
Forcetype_Canine_NoBite +
Forcetype_Other +
Forcetype_Handcuffed_Subject +
Forcetype_Baton_PR_24_Strike +
Forcetype_CEW_Deployment +
Forcetype_Force_Defense_Tech +
Forcetype_Firearm_Discharged +
Forcetype_Baton_PR_24_Miss +
Forcetype_Force_Neck_Holds +
Use_of_Force_Level +
Subject_Injured +
Officer_Injured +
Subject_Hospitalized +
Light_Condition,
data = trainData)
modelprecog <- lm(weighted_sum ~ Officer_Gender_Male +
Officer_Gender_MaleandFemale +
Officer_Gender_Majority_Male +
Officer_Gender_Female +
Officer_Gender_Majority_Female + Subject_Race_White +
Subject_Race_BlackandHispanic +
Subject_Race_BlackandIndian +
Subject_Race_Black +
Subject_Race_WhiteandBlack +
Subject_Race_BlackandRace_Unknown +
Subject_Race_Race_Unknown +
Subject_Race_Mixed +
Subject_Race_WhiteandHispanic +
Subject_Race_Hispanic +
Subject_Race_Majority_Black +
Subject_Race_Majority_Hispanic +
Subject_Race_Asian +
Subject_Race_BlackandIndiane +
Subject_Race_Majority_White +
Subject_Race_Indian +
Officer_Years_of_Service +
Subject_Gender_Male +
Subject_Gender_Female +
Subject_Gender_MaleandFemale +
Subject_Gender_Majority_Male +
Subject_Age +
Subject_Influence_None_Detected +
Subject_Influence_Mentally_Unstable +
Subject_Influence_Unknown +
Subject_Influence_Alchohol +
Forcetype_Firearm_Exhibited +
Forcetype_Hands +
Forcetype_Force_Escort_Tech +
Forcetype_Head_Strike_No_Wep +
Forcetype_Hands_with_injury +
Forcetype_Force_Take_Down +
Forcetype_CEW_Exhibited_Laser +
Forcetype_Canine_Contact +
Forcetype_Baton_PR_24_NonStrk +
Forcetype_VehPursuits_wInjury +
Forcetype_Takedown_winjury +
Forcetype_Canine_NoBite +
Forcetype_Other +
Forcetype_Handcuffed_Subject +
Forcetype_Baton_PR_24_Strike +
Forcetype_CEW_Deployment +
Forcetype_Force_Defense_Tech +
Forcetype_Firearm_Discharged +
Forcetype_Baton_PR_24_Miss +
Forcetype_Force_Neck_Holds +
Light_Condition,
data = trainData)
copmodelcopyearsservice <- lm(weighted_sum ~ Officer_Years_of_Service,
data = coptrainData)
copmodelfocelevel <- lm(weighted_sum ~ Use_of_Force_Level,
data = coptrainData)
copmodelforcetype <- lm(weighted_sum ~ Forcetype_Firearm_Exhibited +
Forcetype_Hands +
Forcetype_Force_Escort_Tech +
Forcetype_Head_Strike_No_Wep +
Forcetype_Hands_with_injury +
Forcetype_Force_Take_Down +
Forcetype_CEW_Exhibited_Laser +
Forcetype_Canine_Contact +
Forcetype_Baton_PR_24_NonStrk +
Forcetype_VehPursuits_wInjury +
Forcetype_Takedown_winjury +
Forcetype_Canine_NoBite +
Forcetype_Other +
Forcetype_Handcuffed_Subject +
Forcetype_Baton_PR_24_Strike +
Forcetype_CEW_Deployment +
Forcetype_Force_Defense_Tech +
Forcetype_Firearm_Discharged +
Forcetype_Baton_PR_24_Miss +
Forcetype_Force_Neck_Holds,
data = coptrainData)
copmodelcopgender <- lm(weighted_sum ~ Officer_Gender_Male +
Officer_Gender_Female,
data = coptrainData)
copmodelcoprace <- lm(weighted_sum ~ Officer_Race_White +
Officer_Race_Hispanic +
Officer_Race_Black +
Officer_Race_Asian_Pacific_Islander +
Officer_Race_American_Indian +
Officer_Race_Unknown,
data = coptrainData)
copmodelfull <- lm(weighted_sum ~ Use_of_Force_Level +
Officer_Years_of_Service +
Officer_Gender_Male +
Officer_Gender_Female +
Officer_Race_White +
Officer_Race_Hispanic +
Officer_Race_Black +
Officer_Race_Asian_Pacific_Islander +
Officer_Race_American_Indian +
Officer_Race_Unknown +
Forcetype_Firearm_Exhibited +
Forcetype_Hands +
Forcetype_Force_Escort_Tech +
Forcetype_Head_Strike_No_Wep +
Forcetype_Hands_with_injury +
Forcetype_Force_Take_Down +
Forcetype_CEW_Exhibited_Laser +
Forcetype_Canine_Contact +
Forcetype_Baton_PR_24_NonStrk +
Forcetype_VehPursuits_wInjury +
Forcetype_Takedown_winjury +
Forcetype_Canine_NoBite +
Forcetype_Other +
Forcetype_Handcuffed_Subject +
Forcetype_Baton_PR_24_Strike +
Forcetype_CEW_Deployment +
Forcetype_Force_Defense_Tech +
Forcetype_Firearm_Discharged +
Forcetype_Baton_PR_24_Miss +
Forcetype_Force_Neck_Holds,
data = coptrainData)
# Create a table to store evaluation metrics for each model
evaluation_table <- data.frame(
Model = character(0),
MSE = numeric(0),
RMSE = numeric(0),
MAE = numeric(0),
R_squared = numeric(0)
)
# Iterate through different models and store their evaluation metrics
models <- list(modelcoprace, modelcopgender, modelsubrace, modelcopyearsservice,
modelcopage, modelsubinjured, modelcopinjured,  modelsubhospital,
modelsubgender, modelsubsize, modelesubage, modelsubheight,
modelinfluence, modelforcetype, modelfocelevel, modeledistance,
modeldivision, modelweather, modellightcondition, modelcombo, modelprecog)  # Add more models as needed
model_names <- c("modelcoprace", "modelcopgender", "modelsubrace", "modelcopyearsservice",
"modelcopage", "modelsubinjured", "modelcopinjured", "modelsubhospital",
"modelsubgender", "modelsubsize", "modelesubage", "modelsubheight",
"modelinfluence", "modelforcetype", "modelfocelevel", "modeledistance",
"modeldivision", "modelweather", "modellightcondition", "modelcombo", "modelprecog")
for (i in seq_along(models)) {
model_name <- model_names[i]
model <- models[[i]]
predictions <- predict(model, newdata = testData)
mse <- mean((testData$weighted_sum - predictions)^2)
rmse <- sqrt(mse)
mae <- mean(abs(testData$weighted_sum - predictions))
residuals <- testData$weighted_sum - predictions
rss <- sum(residuals^2)
tss <- sum((testData$weighted_sum - mean(testData$weighted_sum))^2)
r_squared <- 1 - (rss / tss)
# Round R-squared to the 5th decimal place
r_squared_rounded <- round(r_squared, 5)
new_row <- data.frame(
Model = model_name,
MSE = mse,
RMSE = rmse,
MAE = mae,
R_squared = r_squared_rounded  # Use the rounded R-squared value
)
evaluation_table <- rbind(evaluation_table, new_row)
}
############ These errors are most likely due to the negative correlation
# of Black and White Officers
# Print the evaluation table
print(evaluation_table)
# Iterate through different models and store their evaluation metrics
copmodels <- list(copmodelcoprace, copmodelcopgender, copmodelcopyearsservice, copmodelfull,
copmodelforcetype, copmodelfocelevel)  # Add more models as needed
copmodel_names <- c("copmodelcoprace", "copmodelcopgender", "copmodelcopyearsservice", "copmodelfull",
"copmodelforcetype", "copmodelfocelevel")
# Create a table to store evaluation metrics for each cop model
copevaluation_table <- data.frame(
Model = character(0),
MSE = numeric(0),
RMSE = numeric(0),
MAE = numeric(0),
R_squared = numeric(0)
)
# Iterate through different cop models and store their evaluation metrics
for (i in seq_along(copmodels)) {
model_name <- copmodel_names[i]
model <- copmodels[[i]]
coppredictions <- predict(model, newdata = coptestData)
mse <- mean((coptestData$weighted_sum - coppredictions)^2)
rmse <- sqrt(mse)
mae <- mean(abs(coptestData$weighted_sum - coppredictions))
copresiduals <- coptestData$weighted_sum - coppredictions
rss <- sum(copresiduals^2)
tss <- sum((coptestData$weighted_sum - mean(coptestData$weighted_sum))^2)
r_squared <- 1 - (rss / tss)
# Round R-squared to the 5th decimal place
r_squared_rounded <- round(r_squared, 5)
new_row <- data.frame(
Model = model_name,
MSE = mse,
RMSE = rmse,
MAE = mae,
R_squared = r_squared_rounded  # Use the rounded R-squared value
)
copevaluation_table <- rbind(copevaluation_table, new_row)
}
# Print the evaluation table
# Most of the the officers tables model's prediction is coming from the weight
# on use of for type in our weighted feature .28 r2 here and .35 on the previous
# instance table. Before an incident occurrences this the main predictor. I'm not
# continuing this copmodel any further. This data is evident in the main model
print(copevaluation_table)
#  the randomForest model
# Split the data into training and testing sets
set.seed(123)
trainIndex <- createDataPartition(data$weighted_sum, p = 0.7, list = FALSE)
trainData <- data[trainIndex, ]
testData <- data[-trainIndex, ]
# Create the Random Forest model
model_rf <- randomForest(weighted_sum ~ Officer_Gender_Male +
Officer_Gender_MaleandFemale +
Officer_Gender_Majority_Male +
Officer_Gender_Female +
Officer_Gender_Majority_Female + Subject_Race_White +
Subject_Race_BlackandHispanic +
Subject_Race_BlackandIndian +
Subject_Race_Black +
Subject_Race_WhiteandBlack +
Subject_Race_BlackandRace_Unknown +
Subject_Race_Race_Unknown +
Subject_Race_Mixed +
Subject_Race_WhiteandHispanic +
Subject_Race_Hispanic +
Subject_Race_Majority_Black +
Subject_Race_Majority_Hispanic +
Subject_Race_Asian +
Subject_Race_BlackandIndiane +
Subject_Race_Majority_White +
Subject_Race_Indian +
Officer_Years_of_Service +
Subject_Gender_Male +
Subject_Gender_Female +
Subject_Gender_MaleandFemale +
Subject_Gender_Majority_Male +
Subject_Age +
Subject_Influence_None_Detected +
Subject_Influence_Mentally_Unstable +
Subject_Influence_Unknown +
Subject_Influence_Alchohol +
Forcetype_Firearm_Exhibited +
Forcetype_Hands +
Forcetype_Force_Escort_Tech +
Forcetype_Head_Strike_No_Wep +
Forcetype_Hands_with_injury +
Forcetype_Force_Take_Down +
Forcetype_CEW_Exhibited_Laser +
Forcetype_Canine_Contact +
Forcetype_Baton_PR_24_NonStrk +
Forcetype_VehPursuits_wInjury +
Forcetype_Takedown_winjury +
Forcetype_Canine_NoBite +
Forcetype_Other +
Forcetype_Handcuffed_Subject +
Forcetype_Baton_PR_24_Strike +
Forcetype_CEW_Deployment +
Forcetype_Force_Defense_Tech +
Forcetype_Firearm_Discharged +
Forcetype_Baton_PR_24_Miss +
Forcetype_Force_Neck_Holds +
Use_of_Force_Level +
Subject_Injured +
Officer_Injured +
Subject_Hospitalized +
Light_Condition, data = trainData, ntree = 100, mtry = 5)
model_rfprecog <- randomForest(weighted_sum ~ Officer_Gender_Male +
Officer_Gender_MaleandFemale +
Officer_Gender_Majority_Male +
Officer_Gender_Female +
Officer_Gender_Majority_Female + Subject_Race_White +
Subject_Race_BlackandHispanic +
Subject_Race_BlackandIndian +
Subject_Race_Black +
Subject_Race_WhiteandBlack +
Subject_Race_BlackandRace_Unknown +
Subject_Race_Race_Unknown +
Subject_Race_Mixed +
Subject_Race_WhiteandHispanic +
Subject_Race_Hispanic +
Subject_Race_Majority_Black +
Subject_Race_Majority_Hispanic +
Subject_Race_Asian +
Subject_Race_BlackandIndiane +
Subject_Race_Majority_White +
Subject_Race_Indian +
Officer_Years_of_Service +
Subject_Gender_Male +
Subject_Gender_Female +
Subject_Gender_MaleandFemale +
Subject_Gender_Majority_Male +
Subject_Age +
Subject_Influence_None_Detected +
Subject_Influence_Mentally_Unstable +
Subject_Influence_Unknown +
Subject_Influence_Alchohol +
Forcetype_Firearm_Exhibited +
Forcetype_Hands +
Forcetype_Force_Escort_Tech +
Forcetype_Head_Strike_No_Wep +
Forcetype_Hands_with_injury +
Forcetype_Force_Take_Down +
Forcetype_CEW_Exhibited_Laser +
Forcetype_Canine_Contact +
Forcetype_Baton_PR_24_NonStrk +
Forcetype_VehPursuits_wInjury +
Forcetype_Takedown_winjury +
Forcetype_Canine_NoBite +
Forcetype_Other +
Forcetype_Handcuffed_Subject +
Forcetype_Baton_PR_24_Strike +
Forcetype_CEW_Deployment +
Forcetype_Force_Defense_Tech +
Forcetype_Firearm_Discharged +
Forcetype_Baton_PR_24_Miss +
Forcetype_Force_Neck_Holds +
Light_Condition, data = trainData, ntree = 100, mtry = 5)
# Make predictions on the testing set
predictions <- predict(model_rf, newdata = testData)
# Create a scatter plot to compare predicted vs. actual values
plot(testData$weighted_sum, rounded_predictions,
xlab = "Actual weighted_sum", ylab = "Predicted weighted_sum",
main = "Predicted vs. Actual", pch = 16, col = "blue")
